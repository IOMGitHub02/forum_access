<?php
// $Id$

/**
 * @file forum_access.module
 *
 * This module is a demo of the node_access module, to create access permissions
 * that exist only for forums. It is not as thorough a solution as taxonomy
 * access, but that's more than I want to write as a demo.
 *
 */

/**
 * Implementation of hook_help
 */
function forum_access_help($section) {
  switch($section) {
    case 'admin/modules#description':
      return t('forum access allows role-based access permissions to forums.');
  }
}

/**
 * This function supplies the forum access grants. forum_access simply uses
 * roles as ACLs, so rids translate directly to gids.
 */
function forum_access_node_grants($user, $op) {
  $grants['forum_access'] = array_keys($user->roles);
  return $grants;
}

/**
 * Implementation of hook_node_access_grants
 *
 * Returns a list of grant records for the passed in node object.
 */
function forum_access_node_access_records($node) {
  if ($node->type == 'forum') {
    $result = db_query('SELECT * FROM {forum_access} WHERE tid = %d', $node->tid);
    while ($grant = db_fetch_object($result)) {
      $grants[] = array('realm' => 'forum_access', 'gid' => $grant->rid, 'grant_view' => $grant->grant_view, 'grant_update' => $grant->grant_update, 'grant_delete' => $grant->grant_delete); 
    }
    return $grants;
  }
}

/**
 * Implementation of hook_form_alter()
 *
 * Remove inaccessible forums from the node form.
 */
function forum_access_form_alter($form_id, &$form) {
  if (isset($form['type']) && $form['type']['#value'] .'_node_form' == $form_id) {
    forum_access_node_form($form_id, $form);
  }
  else if ($form_id == 'forum_form_container') {
    forum_access_forum_form($form_id, $form, TRUE);
  }
  else if ($form_id == 'forum_form_forum') {
    forum_access_forum_form($form_id, $form, FALSE);
  }
  // hunmonk's module dependency check: see http://drupal.org/node/54463
  if ($form_id == 'system_modules' && !$_POST) {
    forum_access_system_module_validate($form);
  }
}

/**
 * hunmonk's module dependency check: see http://drupal.org/node/54463
 */
function forum_access_system_module_validate(&$form) {
  $module = 'forum_access';
  $dependencies = array('forum', 'acl');
  foreach ($dependencies as $dependency) {
      if (!in_array($dependency, $form['status']['#default_value'])) {
        $missing_dependency = TRUE;
        $missing_dependency_list[] = $dependency;
      }
  }
  if (in_array($module, $form['status']['#default_value']) && isset($missing_dependency)) {
    db_query("UPDATE {system} SET status = 0 WHERE type = 'module' AND name = '%s'", $module);
    $key = array_search($module, $form['status']['#default_value']);
    unset($form['status']['#default_value'][$key]);
    drupal_set_message(t('The module %module was deactivated--it requires the following disabled/non-existent modules to function properly: %dependencies', array('%module' => $module, '%dependencies' => implode(', ', $missing_dependency_list))), 'error');
  }
}

/**
 * Rewrite the taxonomy item on the node form
 */
function forum_access_node_form($form_id, &$form) {
  if (!is_array($form['taxonomy'][_forum_get_vid()]['#options'])) {
    return;
  }
  global $user;
  $roles = implode(', ', array_keys($user->roles));
  $result = db_query("SELECT tid FROM {forum_access} WHERE rid IN (%s) AND grant_create = 1", $roles);
  while ($obj = db_fetch_object($result)) {
    $tids[$obj->tid] = $obj->tid;
  }
  foreach ($form['taxonomy'][_forum_get_vid()]['#options'] as $tid => $name) {
    if ($tids[$tid]) {
      $options[$tid] = $name;
    }
  }

  if ($options) {
    $form['taxonomy'][_forum_get_vid()]['#options'] = $options;
  }
  else {
    unset($form['taxonomy'][_forum_get_vid()]);
  }
}

/**
 * Rewrite the taxonomy item on the node form
 */
function forum_access_forum_form($form_id, &$form, $container) {
  $rids = array();
  $result = db_query("SELECT r.rid, r.name FROM {role} r ORDER BY r.name");
  while ($obj = db_fetch_object($result)) {
    $rids[$obj->rid] = $obj->name;
  }

  if ($form['tid']['#value']) {
    $result = db_query("SELECT * FROM {forum_access} where tid=%d", $form['tid']['#value']);
    if (db_num_rows($result) == 0) {
      $view = $update = $delete = $create = array(1, 2);
    }

    while ($fa = db_fetch_object($result)) {
      if ($fa->grant_view) {
        $view[] = $fa->rid;
      }
      if ($fa->grant_update) {
        $update[] = $fa->rid;
      }
      if ($fa->grant_delete) {
        $delete[] = $fa->rid;
      }
      if ($fa->grant_create) {
        $create[] = $fa->rid;
      }
    }
  }
  else {
    // Default to all users can read; all logged in users can post.
    $view = $update = $delete = array(1, 2);
    $create = array(2);
  }
  
  $form['forum_access'] = array('#type' => 'fieldset', 
    '#title' => t('Access control'),
    '#collapsible' => TRUE,
    '#tree' => TRUE,
  );

  $form['forum_access']['view'] = array('#type' => 'checkboxes',
    '#options' => $rids,
    '#title' => t('Roles who can view this forum'),
    '#default_value' => $view
  );

  // Containers can only be viewed; they can't be posted to
  // so these fields become meaningless for them.
  if (!$container) {
    $form['forum_access']['create'] = array('#type' => 'checkboxes',
      '#options' => $rids,
      '#title' => t('Roles who can post in this forum'),
      '#default_value' => $create
    );
    $form['forum_access']['update'] = array('#type' => 'checkboxes',
      '#options' => $rids,
      '#title' => t('Roles who can edit posts in this forum'),
      '#default_value' => $update
    );
    $form['forum_access']['delete'] = array('#type' => 'checkboxes',
      '#options' => $rids,
      '#title' => t('Roles who can delete posts in this forum'),
      '#default_value' => $delete
    );
  }
  // Find our moderator ACL:

  if ($form['tid']['#value']) {
    $acl_id = db_result(db_query("SELECT acl_id from {acl} WHERE module = 'forum_access' && name = %d", $form['tid']['#value']));
    if (!$acl_id) { // create one
      $acl_id = acl_create_new_acl('forum_access', $form['tid']['#value']);
      // update every existing node in this forum to use this acl.
      $result = db_query("SELECT nid FROM {term_node} WHERE tid = %d", $form['tid']['#value']);
      while ($node = db_fetch_object($result)) {
        // all privs to this ACL.
        acl_node_add_acl($node->nid, $acl_id, 1, 1, 1);
      }
    }
    $form['forum_access']['acl'] = acl_edit_form($acl_id, 'Moderators');
    // Move some stuff down so our block goes in a nice place.
  }
  $form['submit']['#weight'] = 10;
  $form['delete']['#weight'] = 10;

  $form['#submit']['forum_access_form_submit'] = current($form['#submit']);
}

function forum_access_form_submit($form_id, $form_values) {
  db_query("DELETE FROM {forum_access} WHERE tid = %d", $form_values['tid']);
  $access = $form_values['forum_access']; // shortcut
  if (array_key_exists('acl', $access)) {
    acl_save_form($access['acl']);
  }
  foreach($access['view'] as $rid => $checked) {
    $grants[] = array(
      'realm' => 'forum_access',
      'gid' => $rid,
      'grant_view' => (bool) $checked,
      'grant_update' => (bool) $access['update'][$rid],
      'grant_delete' => (bool) $access['delete'][$rid],
    );
    db_query("INSERT INTO {forum_access} (tid, rid, grant_view, grant_update, grant_delete, grant_create) VALUES (%d, %d, %d, %d, %d, %d)", $form_values['tid'], $rid, (bool) $checked, (bool) $access['update'][$rid], (bool) $access['delete'][$rid], (bool) $access['create'][$rid]);
  }

  // mass update
  $result = db_query("SELECT n.nid FROM {node} n LEFT JOIN {term_node} tn ON tn.nid = n.nid WHERE tn.tid = %d", $form_values['tid']);
  while ($node = db_fetch_object($result)) {
    node_access_write_grants($node, $grants, 'forum_access');
  }
}

/**
 * Because in order to restrict the visible forums, we have to rewrite
 * the sql. This is because there isn't a node_access equivalent for
 * taxonomy. There should be.
 */
function forum_access_db_rewrite_sql($query, $primary_table, $primary_field, $args) {
  if ($primary_field == 'tid') {
    if (user_access('administer forums')) {
      return;
    }
    global $user;
    $roles = implode(',', array_keys($user->roles));
    $sql['join'] = "LEFT JOIN {forum_access} fa ON $primary_table.tid = fa.tid";
    $sql['where'] = "(fa.grant_view >= 1 AND fa.rid IN ($roles)) OR fa.tid IS NULL";
    $sql['distinct'] = 1;
    return $sql;
  }
}

/**
 * nodeapi hook to add ACL data to fresh forum posts.
 */
function forum_access_nodeapi(&$node, $op, $teaser = NULL, $page = NULL) {
  if ($node && $node->type == 'forum' && $op == 'insert') {
    $acl_id = db_result(db_query("SELECT acl_id from {acl} WHERE module = 'forum_access' && name = %d", $node->tid));
    acl_node_add_acl($node->nid, $acl_id, 1, 1, 1);
 }
}
